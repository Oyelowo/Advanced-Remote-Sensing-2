points(damaged_trees$X, damaged_trees$Y, col="blue")
legend(2515825, 6861200, legend = c("damaged trees_Chm", "damaged"),
bty = c(0.1,2), fill = c("white","brown"), cex= 1)
legend(legend = c("damaged trees_Chm", "damaged"),
bty = c(0.1,2), fill = c("white","brown"), cex= 1)
legend(dif10_6, legend = c("damaged trees_Chm", "damaged"),
bty = c(0.1,2), fill = c("white","brown"), cex= 1)
legend(top, legend = c("damaged trees_Chm", "damaged"),
bty = c(0.1,2), fill = c("white","brown"), cex= 1)
legend(top, legend = c("damaged trees_Chm", "damaged"),
bty = c(1,1), fill = c("white","brown"), cex= 1)
legend("top", legend = c("damaged trees_Chm", "damaged"),
bty = c(1,1), fill = c("white","brown"), cex= 1)
par(mfcol=c(1,2))
plot(dif10_6)
legend("top", legend = c("damaged trees_Chm", "damaged"),
bty = c(1,1), fill = c("white","brown"), cex= 1)
plot(dif10_6, "top", legend = c("damaged trees_Chm", "damaged"),
bty = c(1,1), fill = c("white","brown"), cex= 1)
par(mfcol=c(1,2))
plot(dif10_6)
plot.new()
legend("top", legend = c("damaged trees_Chm", "damaged"),
bty = c(1,1), fill = c("white","brown"), cex= 1)
legend("topleft", legend = c("damaged trees_Chm", "damaged"),
bty = c(1,1), fill = c("white","brown"), cex= 1)
par(mfcol=c(2,1))
plot(dif10_6)
points(damaged_trees$X, damaged_trees$Y, col="blue")
plot.new()
legend("topleft", legend = c("damaged trees_Chm", "damaged"),
bty = c(1,1), fill = c("white","brown"), cex= 1)
par(mfcol=c(1,2), bycol)
plot(dif10_6)
par(mfcol=c(1,2))
plot(dif10_6)
points(damaged_trees$X, damaged_trees$Y, col="blue")
plot.new()
legend("topleft", legend = c("damaged trees_Chm", "damaged"),
bty = c(1,1), fill = c("white","brown"), cex= 1)
legend("topleft", legend = c("damaged trees from Chm", "damaged trees from chm"),
bty = c(1,1), fill = c("white","brown"), cex= 1)
legend("bottomleft", legend = c("damaged trees from Chm", "damaged trees from chm"),
bty = c(1,1), fill = c("white","brown"), cex= 1)
plot(dif6_10)
legend("bottomleft", legend = c("damaged trees from Chm"),
bty = c(1,1), fill = c("green"), cex= 1)
?col
legend("bottomleft", legend = c("damaged trees from Chm"),
bty = c(1,1), fill = c("darkgreen"), cex= 1)
legend("bottomleft", legend = c("damaged trees from Chm"),
bty = c(1,1), fill = c("navygreen"), cex= 1)
par(mfcol=c(1,2))
plot(dif6_10)
plot.new()
legend("bottomleft", legend = c("damaged trees from Chm"),
bty = c(1,1), fill = c("darkgreen"), cex= 1)
legend("bottomleft", legend = c("damaged trees from Chm"),
bty = c(1,1), fill = c("greygreen"), cex= 1)
legend("bottomleft", legend = c("damaged trees from Chm"),
bty = c(1,1), fill = c("green"), cex= 1)
par(mfcol=c(1,2), bycol)
par(mfcol=c(1,2), bycol=T)
par(mfcol=c(2,1))
plot(dif6_10)
plot.new()
legend("top", legend = c("damaged trees from Chm"),
bty = c(1,1), fill = c("green"), cex= 1)
2
ar(mfcol=c(1,2))
plot(dif10_6)
plot(dif6_10)
points(damaged_trees$X, damaged_trees$Y, col="blue")
plot.new()
legend("bottomleft", legend =
par(mfcol=c(1,2))
plot(dif10_6)
par(mfcol=c(1,2))
plot(dif6_10)
legend(2515825, 6861000, legend = c("damaged trees_Chm", "damaged"),
bty = c(0.1,2), fill = c("white","brown"), cex= 1)
legend(2515825, 68611600, legend = c("damaged trees_Chm", "damaged"),
bty = c(0.1,2), fill = c("white","brown"), cex= 1)
legend(2515825, 68611700, legend = c("damaged trees_Chm", "damaged"),
bty = c(0.1,2), fill = c("white","brown"), cex= 1)
legend(2515825, 6861170, legend = c("damaged trees_Chm", "damaged"),
bty = c(0.1,2), fill = c("white","brown"), cex= 1)
legend(2515825, 6861150, legend = c("damaged trees_Chm", "damaged"),
bty = c(0.1,2), fill = c("white","brown"), cex= 1)
legend(2515825, 6861200, legend = c("damaged trees_Chm", "damaged"),
bty = c(0.1,2), fill = c("white","brown"), cex= 1)
legend("bottomleft", legend = c("damaged trees from Chm"),
bty = c(1,1), fill = c("green"), cex= 1)
par(mfcol=c(1,2))
plot(dif6_10)
legend("bottomleft", legend = c("damaged trees from Chm"),
bty = c(1,1), fill = c("green"), cex= 1)
plot(dif6_10, title="damaged trees")
plot(dif6_10, main="damaged trees")
par(mfcol=c(1,2))
plot(dif6_10, main="damaged trees")
legend("bottomleft", legend = c("damaged trees from Chm"),
bty = c(1,1), fill = c("green"), cex= 1)
legend("bottomleft", legend = c("damaged trees from Chm"),
bty = c(1,1), fill = c("darkgreen"), cex= 1)
legend("bottomleft", legend = c("damaged trees from Chm"),
bty = c(1,1), fill = c("darkgreen(2)", cex= 1)
?col
l#egend(2515825, 6861200, legend = c("damaged trees_Chm", "damaged"),
#    bty = c(0.1,2), fill = c("white","brown"), cex= 1)
?legend
plot3D(dif6_10)
#Does the observed damages in the field data correspond with
#those areas?
#yes, they do, to a very large extent.
#What is the mean difference of CHMs 2006 and 2010
#(estimate for tree height growth)?
#This can be done directly by:
cellStats(dif10_6, stat = 'mean')
?cellStats
#or by following a longer process of converting to data frame and
#then getting the summary descriptive stat from it
#below is the alternative method:
chm10_6<-as.data.frame(dif10_6, row.names = NULL,
optional = T, xy=TRUE, na.rm=T)
mean(chm10_6$layer)
#Calculate vertical canopy cover (CHM ≥ 1.3 meters)
#estimates for years 2006 and 2010?
#vertical canopy cover for 2006
chm6.df <-as.data.frame(chm05_6foc3, xy=T, na.rm=T)
chm6_13<- subset(chm6.df, chm6.df$layer >= 1.3)
chm6_layer<-(chm6_13$layer)
summary(chm6_layer)
plot(chm6_layer)
hist(chm6_layer)
#vertical canpy cover for 2010
chm10.df <-as.data.frame(chm05_10foc3, xy=T, na.rm=T)
summary(chm10.df)
chm10_13<- subset(chm10.df, chm10.df$layer >= 1.3)
summary(chm10_13)
#compare the chm >=1.3 and the one without. Use length fxn
length(chm10_13$layer)
length(chm10.df$layer)
sum(chm10.df$layer)
sum(chm10_13$layer)
chm10_13<- subset(chm10.df, chm10.df$layer >= 1.3)
summary(chm10_13$layer)
#?writeRaster
writeRaster(chm05_6foc3, filename = "chm2006.tif", format= "GTiff")
writeRaster(chm05_6foc3, filename = "chm2006..asc", format= "ascii")
writeRaster(chm05_10foc3, filename = "chm2010.tif", format= "GTiff")
legend("bottomleft", legend = c("damaged trees from Chm"),
bty = c(1,1), fill = c("green(3)", cex= 1)
?col
l#egend(2515825, 6861200, legend = c("damaged trees_Chm", "damaged"),
#    bty = c(0.1,2), fill = c("white","brown"), cex= 1)
?legend
plot3D(dif6_10)
#Does the observed damages in the field data correspond with
#those areas?
#yes, they do, to a very large extent.
#What is the mean difference of CHMs 2006 and 2010
#(estimate for tree height growth)?
#This can be done directly by:
cellStats(dif10_6, stat = 'mean')
?cellStats
#or by following a longer process of converting to data frame and
#then getting the summary descriptive stat from it
#below is the alternative method:
chm10_6<-as.data.frame(dif10_6, row.names = NULL,
optional = T, xy=TRUE, na.rm=T)
mean(chm10_6$layer)
#Calculate vertical canopy cover (CHM ≥ 1.3 meters)
#estimates for years 2006 and 2010?
#vertical canopy cover for 2006
chm6.df <-as.data.frame(chm05_6foc3, xy=T, na.rm=T)
chm6_13<- subset(chm6.df, chm6.df$layer >= 1.3)
chm6_layer<-(chm6_13$layer)
summary(chm6_layer)
plot(chm6_layer)
hist(chm6_layer)
#vertical canpy cover for 2010
chm10.df <-as.data.frame(chm05_10foc3, xy=T, na.rm=T)
summary(chm10.df)
chm10_13<- subset(chm10.df, chm10.df$layer >= 1.3)
summary(chm10_13)
#compare the chm >=1.3 and the one without. Use length fxn
length(chm10_13$layer)
length(chm10.df$layer)
sum(chm10.df$layer)
sum(chm10_13$layer)
chm10_13<- subset(chm10.df, chm10.df$layer >= 1.3)
summary(chm10_13$layer)
#?writeRaster
writeRaster(chm05_6foc3, filename = "chm2006.tif", format= "GTiff")
writeRaster(chm05_6foc3, filename = "chm2006..asc", format= "ascii")
writeRaster(chm05_10foc3, filename = "chm2010.tif", format= "GTiff")
par(mfcol=c(1,2))
plot(dif6_10, main="damaged trees")
legend("bottomleft", legend = c("damaged trees from Chm"),
bty = c(1,1), fill = c("green"), cex= 1)
plot(dif6_10, main="chm2006 - chm2010")
par(mfcol=c(1,2))
plot(dif6_10, main="chm2006 - chm2010")
legend("bottomleft", legend = c("damaged trees from Chm"),
bty = c(1,1), fill = c("green"), cex= 1)
plot(dif10_6, main= "chm2010 - chm2006")
plot(dif10_6, main= "chm2010 - chm2006")
points(damaged_trees$X, damaged_trees$Y, col="blue")
legend ("bottomleft", c("damaged tree", "no damage"),
col= c("black", "red"), pch=c(1,1))
plot(dif10_6, main= "chm2010 - chm2006")
points(damaged_trees$X, damaged_trees$Y, col="blue")
legend ("bottomleft", c("damaged tree", "no damage"),
col= c("black", "red"), pch=c(1,1))
plot(dif10_6, main= "chm2010 - chm2006")
points(damaged_trees$X, damaged_trees$Y, col="blue")
legend ("bottomleft", c("damaged tree", "no damage"),
col= c("black", "red"), pch=c(1,1))
plot(dif10_6, main= "chm2010 - chm2006")
points(damaged_trees$X, damaged_trees$Y, col="red")
points(damaged_trees$X, damaged_trees$Y, col="blue")
legend ("bottomleft", c("damaged tree"),
col= c("blue"), pch=c(1,1))
legend ("bottomleft", c("damaged tree", "no damage"),
col= c("blue", "black"), pch=c(1,1))
points(no_damage$X, no_damage$Y, col="black")
points(no_damage$X, no_damage$Y, col="gray")
points(no_damage$X, no_damage$Y, col="white")
points(no_damage$X, no_damage$Y, col="red")
points(damaged_trees$X, damaged_trees$Y, col="red")
points(no_damage$X, no_damage$Y, col="blue")
legend ("bottomleft", c("damaged tree", "no damage"),
col= c("red", "blue"), pch=c(1,1))
plot(dif10_6, main= "chm2010 - chm2006")
points(damaged_trees$X, damaged_trees$Y, col="red")
legend ("bottomleft", c("damaged tree"),
col= c("red"), pch=c(1,1))
par(mfcol=c(1,2))
plot(dif10_6, main= "chm2010 - chm2006")
plot(dif10_6, main= "chm2010 - chm2006")
plot(dif10_6, main= "chm2010 - chm2006")
plot(dif10_6, main= "chm2010 - chm2006")
plot(dif10_6, main= "chm2010 - chm2006")
plot(dif10_6, main= "chm2010 - chm2006")
plot(dif10_6, main= "chm2010 - chm2006")
legend("bottomleft", legend = c("damaged trees from Chm"),
bty = c(1,1), fill = c("brown"), cex= 1)
legend("bottomleft", legend = c("damaged trees from Chm"),
bty = c(1,1), fill = c("lightbrown"), cex= 1)
plot(dif10_6, main= "chm2010 - chm2006")
points(damaged_trees$X, damaged_trees$Y, col="red")
points(damaged_trees$X, damaged_trees$Y, col="red")
plot(dif10_6, main= "chm2010 - chm2006")
points(damaged_trees$X, damaged_trees$Y, col="red")
legend ("bottomleft", c("damaged tree"),
col= c("red"), pch=c(1,1))
plot(dif10_6, main= "chm2010 - chm2006")
points(damaged_trees$X, damaged_trees$Y, col="red")
legend ("bottomleft", c("damaged tree"),
col= c("red"), pch=c(1,1))
points(no_damage$X, no_damage$Y, col="blue")
legend ("bottomleft", c("damaged tree", "no damage"),
col= c("red", "blue"), pch=c(1,1))
cellStats(dif10_6, stat = 'mean')
mean(chm6_layer)
mean(chm10_6$layer)
length(chm10_13$layer)
length(chm10.df$layer)
sum(chm10.df$layer)
sum(chm10_13$layer)
summary(chm10.df$layer)
summary(chm10_13$layer)
mean(chm6_layer)
summary(chm6_layer)
plot(chm6_layer)
hist(chm6_layer)
hist(chm6_layer, main="of chm>=1.3 2006")
hist(chm6_layer, main="histogram of chm>=1.3 2006")
mean(chm6_13$layer)
summary(chm6_13$layer)
hist(chm10_13$layer, main="histogram of chm>=1.3 2006")
summary(chm10_13)
summary(chm10_13$layer)
hist(chm10_13$layer, main="histogram of chm>=1.3 2010")
plot(chm05_6)
plot(chm05_6, main="CHM 2006 without filter")
plot(chm05_6, main="0.5 resolution CHM 2006 without filter")
par(mfrow3d=c(2,1))
par(mfrow=c(2,1))
plot(chm05_6, main="0.5 resolution CHM 2006 without filter")
par(mfrow=c(1,2))
plot(chm05_6, main="0.5 resolution CHM 2006 without filter")
plot(chm05_6foc3, main="0.5 resolution CHM 2006 with 3X# filter")
plot(chm05_6foc3, main="0.5 resolution CHM 2006 with 3X3 filter")
par(mfrow=c(1,2))
plot(chm05_6, main="0.5 resolution CHM 2006 without filter")
plot(chm05_6foc3, main="0.5 resolution CHM 2006 with 3X3 filter")
plot3d(chm05_6foc3)
plot3D(chm05_6foc3)
plot3D(chm05_6foc3)
par(mfrow=c(3,3))
plot(chm05_10, main="0.5 resolution CHM 2010 without filter")
# 3x3 mean filter
chm05_10foc3<-focal(chm05_10,w=matrix(1/9, nc=3, nr=3), fun=mean,
na.rm=T, NAonly=TRUE)
plot(chm05_10foc3, main="0.5 resolution CHM 2010 with 3X3 filter")
chm05_10foc3<-focal(chm05_10,w=matrix(1,3,3), fun=mean,
na.rm=T, NAonly=T)
plot(chm05_10foc3, main="0.5 resolution CHM 2010 with 3X3 filter")
# 5x5 mean filter
chm05_10foc5<-focal(chm05_10,w=matrix(1/25,nrow=5,ncol=5),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10foc5, main="0.5 resolution CHM 2010 with 5X5 filter")
#Laplacian filter: filter=matrix(c(0,1,0,1,-4,1,0,1,0), nrow=3)
chm05_10focl<-focal(chm05_10,w=matrix(c(0,1,0,1,-4,1,0,1,0), nrow=3),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focl, main="0.5 resolution CHM 2010 with Laplacian filter")
#Sobel filter: filter=matrix(c(1,2,1,0,0,0,-1,-2,-1) / 4, nrow=3)
chm05_10focs<-focal(chm05_10,w=matrix(c(1,2,1,0,0,0,-1,-2,-1) / 4, nrow=3),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focs, main="0.5 resolution CHM 2010 with Sobel filter")
# Gaussian filter
gf <- focalWeight(chm05_10, 2, "Gauss")
chm05_10focg<-focal(chm05_10,w=gf,
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focg, main="0.5 resolution CHM 2010 with Gaussian filter")
par(mfrow=c(3,3))
plot(chm05_10, main="CHM 2010 without filter")
# 3x3 mean filter
chm05_10foc3<-focal(chm05_10,w=matrix(1/9, nc=3, nr=3), fun=mean,
na.rm=T, NAonly=TRUE)
plot(chm05_10foc3, main="CHM 2010 with 3X3 filter")
chm05_10foc3<-focal(chm05_10,w=matrix(1,3,3), fun=mean,
na.rm=T, NAonly=T)
plot(chm05_10foc3, main="CHM 2010 with 3X3 filter")
# 5x5 mean filter
chm05_10foc5<-focal(chm05_10,w=matrix(1/25,nrow=5,ncol=5),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10foc5, main="CHM 2010 with 5X5 filter")
#Laplacian filter: filter=matrix(c(0,1,0,1,-4,1,0,1,0), nrow=3)
chm05_10focl<-focal(chm05_10,w=matrix(c(0,1,0,1,-4,1,0,1,0), nrow=3),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focl, main="CHM 2010 with Laplacian filter")
#Sobel filter: filter=matrix(c(1,2,1,0,0,0,-1,-2,-1) / 4, nrow=3)
chm05_10focs<-focal(chm05_10,w=matrix(c(1,2,1,0,0,0,-1,-2,-1) / 4, nrow=3),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focs, main="CHM 2010 with Sobel filter")
# Gaussian filter
gf <- focalWeight(chm05_10, 2, "Gauss")
chm05_10focg<-focal(chm05_10,w=gf,
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focg, main="CHM 2010 with Gaussian filter")
par(mfrow=c(3,3))
plot(chm05_10, main="CHM 2010 without filter")
# 3x3 mean filter
chm05_10foc3<-focal(chm05_10,w=matrix(1/9, nc=3, nr=3), fun=mean,
na.rm=T, NAonly=TRUE)
plot(chm05_10foc3, main="CHM 2010 with 3X3 filter")
chm05_10foc3<-focal(chm05_10,w=matrix(1,3,3), fun=mean,
na.rm=T, NAonly=T)
plot(chm05_10foc3, main="CHM 2010 with 3X3 filter")
# 5x5 mean filter
chm05_10foc5<-focal(chm05_10,w=matrix(1/25,nrow=5,ncol=5),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10foc5, main="CHM 2010 with 5X5 filter")
#Laplacian filter: filter=matrix(c(0,1,0,1,-4,1,0,1,0), nrow=3)
chm05_10focl<-focal(chm05_10,w=matrix(c(0,1,0,1,-4,1,0,1,0), nrow=3),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focl, main="CHM 2010 with Laplacian filter")
#Sobel filter: filter=matrix(c(1,2,1,0,0,0,-1,-2,-1) / 4, nrow=3)
chm05_10focs<-focal(chm05_10,w=matrix(c(1,2,1,0,0,0,-1,-2,-1) / 4, nrow=3),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focs, main="CHM 2010 with Sobel filter")
# Gaussian filter
gf <- focalWeight(chm05_10, 2, "Gauss")
chm05_10focg<-focal(chm05_10,w=gf,
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focg, main="CHM 2010 with Gaussian filter")
par(mfrow=c(3,3))
# 3x3 mean filter
chm05_10foc3<-focal(chm05_10,w=matrix(1/9, nc=3, nr=3), fun=mean,
na.rm=T, NAonly=TRUE)
plot(chm05_10foc3, main="CHM 2010 with 3X3 filter")
chm05_10foc3<-focal(chm05_10,w=matrix(1,3,3), fun=mean,
na.rm=T, NAonly=T)
plot(chm05_10foc3, main="CHM 2010 with 3X3 filter")
# 5x5 mean filter
chm05_10foc5<-focal(chm05_10,w=matrix(1/25,nrow=5,ncol=5),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10foc5, main="CHM 2010 with 5X5 filter")
#Laplacian filter: filter=matrix(c(0,1,0,1,-4,1,0,1,0), nrow=3)
chm05_10focl<-focal(chm05_10,w=matrix(c(0,1,0,1,-4,1,0,1,0), nrow=3),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focl, main="CHM 2010 with Laplacian filter")
#Sobel filter: filter=matrix(c(1,2,1,0,0,0,-1,-2,-1) / 4, nrow=3)
chm05_10focs<-focal(chm05_10,w=matrix(c(1,2,1,0,0,0,-1,-2,-1) / 4, nrow=3),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focs, main="CHM 2010 with Sobel filter")
# Gaussian filter
gf <- focalWeight(chm05_10, 2, "Gauss")
chm05_10focg<-focal(chm05_10,w=gf,
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focg, main="CHM 2010 with Gaussian filter")
par(mfrow=c(3,2))
# 3x3 mean filter
chm05_10foc3<-focal(chm05_10,w=matrix(1/9, nc=3, nr=3), fun=mean,
na.rm=T, NAonly=TRUE)
plot(chm05_10foc3, main="CHM 2010 with 3X3 filter")
chm05_10foc3<-focal(chm05_10,w=matrix(1,3,3), fun=mean,
na.rm=T, NAonly=T)
plot(chm05_10foc3, main="CHM 2010 with 3X3 filter")
# 5x5 mean filter
chm05_10foc5<-focal(chm05_10,w=matrix(1/25,nrow=5,ncol=5),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10foc5, main="CHM 2010 with 5X5 filter")
#Laplacian filter: filter=matrix(c(0,1,0,1,-4,1,0,1,0), nrow=3)
chm05_10focl<-focal(chm05_10,w=matrix(c(0,1,0,1,-4,1,0,1,0), nrow=3),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focl, main="CHM 2010 with Laplacian filter")
#Sobel filter: filter=matrix(c(1,2,1,0,0,0,-1,-2,-1) / 4, nrow=3)
chm05_10focs<-focal(chm05_10,w=matrix(c(1,2,1,0,0,0,-1,-2,-1) / 4, nrow=3),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focs, main="CHM 2010 with Sobel filter")
# Gaussian filter
gf <- focalWeight(chm05_10, 2, "Gauss")
chm05_10focg<-focal(chm05_10,w=gf,
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focg, main="CHM 2010 with Gaussian filter")
par(mfrow=c(2,3))
# 3x3 mean filter
chm05_10foc3<-focal(chm05_10,w=matrix(1/9, nc=3, nr=3), fun=mean,
na.rm=T, NAonly=TRUE)
plot(chm05_10foc3, main="CHM 2010 with 3X3 filter")
chm05_10foc3<-focal(chm05_10,w=matrix(1,3,3), fun=mean,
na.rm=T, NAonly=T)
plot(chm05_10foc3, main="CHM 2010 with 3X3 filter")
# 5x5 mean filter
chm05_10foc5<-focal(chm05_10,w=matrix(1/25,nrow=5,ncol=5),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10foc5, main="CHM 2010 with 5X5 filter")
#Laplacian filter: filter=matrix(c(0,1,0,1,-4,1,0,1,0), nrow=3)
chm05_10focl<-focal(chm05_10,w=matrix(c(0,1,0,1,-4,1,0,1,0), nrow=3),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focl, main="CHM 2010 with Laplacian filter")
#Sobel filter: filter=matrix(c(1,2,1,0,0,0,-1,-2,-1) / 4, nrow=3)
chm05_10focs<-focal(chm05_10,w=matrix(c(1,2,1,0,0,0,-1,-2,-1) / 4, nrow=3),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focs, main="CHM 2010 with Sobel filter")
# Gaussian filter
gf <- focalWeight(chm05_10, 2, "Gauss")
chm05_10focg<-focal(chm05_10,w=gf,
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focg, main="CHM 2010 with Gaussian filter")
par(mfrow=c(3,2))
# 3x3 mean filter
chm05_10foc3<-focal(chm05_10,w=matrix(1/9, nc=3, nr=3), fun=mean,
na.rm=T, NAonly=TRUE)
plot(chm05_10foc3, main="CHM 2010 with 3X3 filter")
chm05_10foc3<-focal(chm05_10,w=matrix(1,3,3), fun=mean,
na.rm=T, NAonly=T)
plot(chm05_10foc3, main="CHM 2010 with 3X3 filter")
# 5x5 mean filter
chm05_10foc5<-focal(chm05_10,w=matrix(1/25,nrow=5,ncol=5),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10foc5, main="CHM 2010 with 5X5 filter")
#Laplacian filter: filter=matrix(c(0,1,0,1,-4,1,0,1,0), nrow=3)
chm05_10focl<-focal(chm05_10,w=matrix(c(0,1,0,1,-4,1,0,1,0), nrow=3),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focl, main="CHM 2010 with Laplacian filter")
#Sobel filter: filter=matrix(c(1,2,1,0,0,0,-1,-2,-1) / 4, nrow=3)
chm05_10focs<-focal(chm05_10,w=matrix(c(1,2,1,0,0,0,-1,-2,-1) / 4, nrow=3),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focs, main="CHM 2010 with Sobel filter")
# Gaussian filter
gf <- focalWeight(chm05_10, 2, "Gauss")
chm05_10focg<-focal(chm05_10,w=gf,
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focg, main="CHM 2010 with Gaussian filter")
par(mfrow=c(2,3))
# 3x3 mean filter
chm05_10foc3<-focal(chm05_10,w=matrix(1/9, nc=3, nr=3), fun=mean,
na.rm=T, NAonly=TRUE)
plot(chm05_10foc3, main="CHM 2010 with 3X3 filter")
chm05_10foc3<-focal(chm05_10,w=matrix(1,3,3), fun=mean,
na.rm=T, NAonly=T)
plot(chm05_10foc3, main="CHM 2010 with 3X3 filter")
# 5x5 mean filter
chm05_10foc5<-focal(chm05_10,w=matrix(1/25,nrow=5,ncol=5),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10foc5, main="CHM 2010 with 5X5 filter")
#Laplacian filter: filter=matrix(c(0,1,0,1,-4,1,0,1,0), nrow=3)
chm05_10focl<-focal(chm05_10,w=matrix(c(0,1,0,1,-4,1,0,1,0), nrow=3),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focl, main="CHM 2010 with Laplacian filter")
#Sobel filter: filter=matrix(c(1,2,1,0,0,0,-1,-2,-1) / 4, nrow=3)
chm05_10focs<-focal(chm05_10,w=matrix(c(1,2,1,0,0,0,-1,-2,-1) / 4, nrow=3),
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focs, main="CHM 2010 with Sobel filter")
# Gaussian filter
gf <- focalWeight(chm05_10, 2, "Gauss")
chm05_10focg<-focal(chm05_10,w=gf,
na.rm=TRUE, NAonly=TRUE)
plot(chm05_10focg, main="CHM 2010 with Gaussia
plot(chm05_10focg, main="CHM 2010 with Gaussian filter")
plot(chm05_10focg, main="CHM 2010 with Gaussian filter")
plot(chm05_10, main="CHM 2010 without filter")
plot(chm05_10, main="CHM 2010 without filter")
plot(chm05_10, main="CHM 2010 without filter")
plot(dif10_6, main= "chm2010 - chm2006")
plot3D(chm05_10foc3)
plot3D(chm05_10foc3)
